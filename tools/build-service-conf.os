#Использовать v8runner
#Использовать logos
#Использовать json

Перем Лог;
Перем массивСервисныхБаз;

//TODO убрать копипаст из кода 3-ех библиотек
Процедура ПрочитьНастройки()

	парсерJSON = Новый ПарсерJSON();

	файлКонфигурацииСервисныхБаз = Новый ЧтениеТекста();
	файлКонфигурацииСервисныхБаз.Открыть(".\tools\service-bases.conf");

	текстНастроек = файлКонфигурацииСервисныхБаз.Прочитать();

	массивСервисныхБаз = парсерJSON.ПрочитатьJSON(текстНастроек);

	файлКонфигурацииСервисныхБаз.Закрыть(); 
	//TODO - кстати надо разобраться - когда oscript закрывает открытые дескрипторы

	//FIXME - определить почему JSON отправляет в файл Структуру, а обратно получает Соответствие
	//FIXME - разобраться почему oscript не позволяет обойти Соответствие как универсальную коллекцию

КонецПроцедуры

Лог = Логирование.ПолучитьЛог("behavior.build.log");

ПрочитьНастройки();

УправлениеКонфигуратором = Новый УправлениеКонфигуратором();
УправлениеКонфигуратором.КаталогСборки(".\distr\");	


Лог.Информация("Работаю в контексте запуска " + ТекущийКаталог());

Для каждого _конфигурация из массивСервисныхБаз Цикл
	
	ПутьКИсходникам = _конфигурация.Получить("ПутьКИсходникам");
	ВерсияПлатформы = _конфигурация.Получить("Версия");
	СоздаваемаяБаза = _конфигурация.Получить("СоздаваемаяБаза");

	Лог.Информация("Обрабатываю исходные файлы " + ПутьКИсходникам);

	указательНаБазу = Новый Файл(СоздаваемаяБаза + "\1Cv8.1cd");

	путьКПлатформе = УправлениеКонфигуратором.ПолучитьПутьКВерсииПлатформы(ВерсияПлатформы);
	УправлениеКонфигуратором.ПутьКПлатформе1С(путьКПлатформе);

	Если указательНаБазу.Существует() Тогда
		лог.Отладка("Ранее был создан каталог " + СоздаваемаяБаза);
	Иначе
		лог.Отладка("Создание сервисной базы контрибьютора " + СоздаваемаяБаза);
		УправлениеКонфигуратором.СоздатьФайловуюБазу(СоздаваемаяБаза);
	КонецЕсли;	

	УправлениеКонфигуратором.УстановитьКонтекст("/F" + СоздаваемаяБаза + "\","","");

	ПараметрыЗапуска = УправлениеКонфигуратором.ПолучитьПараметрыЗапуска();
	ПараметрыЗапуска.Добавить("/LoadConfigFiles""" + ПутьКИсходникам + """"); 

	УправлениеКонфигуратором.ВыполнитьКоманду(ПараметрыЗапуска);

	УправлениеКонфигуратором.ВыполнитьСинтаксическийКонтроль();

	УправлениеКонфигуратором.ОбновитьКонфигурациюБазыДанных();

КонецЦикла;

УправлениеКонфигуратором.ЗапуститьВРежимеПредприятия("",Истина);

