{3,
{38,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"Контекст",1,0,
{1,0},
{1,0},
{0},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КонтекстКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КонтекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",0,0,1,
{19,
{0},0,0,0,7,"LeftCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"LeftCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,
{19,
{0},0,0,0,7,"RightCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"RightCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
}
},"//начало текста модуля
&НаКлиенте
Перем юТест;
&НаКлиенте
Перем МаксКоличествоСекундПодключения,ТекКоличествоСекундПодключения;

&НаКлиенте
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	юТест = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,""ЕстьКонфигурация(Парам01)"",""ЕстьКонфигурация"",""есть Конфигурация 'Бухгалтерия 3.0 (Такси)'"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗапускаюСеанс1ССКлючомTestClient()"",""ЯЗапускаюСеанс1ССКлючомTestClient"",""я запускаю сеанс 1С с ключом TestClient"");
	ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетКонтрагент(Парам01)"",""СуществуетКонтрагент"",""существует Контрагент 'тестовый Контрагент'"");
	ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетДоговорСДатойДоговора(Парам01,Парам02)"",""СуществуетДоговорСДатойДоговора"",""существует договор 'тестовый договор Контрагента 1' с датой договора 01.01.2014"");
	ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетУслуга(Парам01)"",""СуществуетУслуга"",""существует услуга 'тестовая услуга 1'"");
	ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетДокументОтПоКонтрагентуПоДоговоруПоУслугеНаСуммуРуб(Парам01,Парам02,Парам03,Парам04,Парам05,Парам06)"",""СуществуетДокументОтПоКонтрагентуПоДоговоруПоУслугеНаСуммуРуб"",""существует Документ 'РеализацияТоваровИУслуг1' от 01.01.2014  по контрагенту 'тестовый Контрагент' по договору 'тестовый договор Контрагента 1' по услуге 'тестовая услуга 1' на сумму 1000 руб."");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВведенаУчетнаяПолитика()"",""ВведенаУчетнаяПолитика"",""Введена учетная политика"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ХочетОплатитьСуммуРуб(Парам01,Парам02)"",""ХочетОплатитьСуммуРуб"",""'тестовый Контрагент' хочет оплатить сумму 1100 руб."");
	ДобавитьШагВМассивТестов(ВсеТесты,""ФиксируетсяОплатаПоПоДоговоруНаСуммуРублей(Парам01,Парам02,Парам03)"",""ФиксируетсяОплатаПоПоДоговоруНаСуммуРублей"",""фиксируется оплата по  'тестовый Контрагент' по договору 'тестовый договор Контрагента 1'  на сумму 1100 рублей"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ФормируетсяПроводкаПоСчетуНаСумму1000ГдеЗаполненоКакДокументОт(Парам01,Парам02,Парам03,Парам04)"",""ФормируетсяПроводкаПоСчетуНаСумму1000ГдеЗаполненоКакДокументОт"",""формируется проводка по счету '62.01' на сумму 1000, где 'субконто3' заполнено как Документ 'РеализацияТоваровИУслуг1' от 01.01.2014"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ФормируетсяПроводкаПоСчетуНаСумму100ГдеЗаполненоКакДокументОт(Парам01,Парам02,Парам03,Парам04)"",""ФормируетсяПроводкаПоСчетуНаСумму100ГдеЗаполненоКакДокументОт"",""формируется проводка по счету '62.01' на сумму 100, где 'субконто3' заполнено как Документ 'РеализацияТоваровИУслуг2' от 02.01.2014"");
	ДобавитьШагВМассивТестов(ВсеТесты,""НаСчетеОстаетсяДолгВРазмереРублейПоДокументОт(Парам01,Парам02,Парам03,Парам04,Парам05)"",""НаСчетеОстаетсяДолгВРазмереРублейПоДокументОт"",""на счете '62.01'  остается долг в размере 200 рублей по 'субконто3' Документ 'РеализацияТоваровИУслуг2' от 02.01.2014"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ФормируетсяПроводкаПоСчетуНаСумму300ГдеЗаполненоКакДокументОт(Парам01,Парам02,Парам03,Парам04)"",""ФормируетсяПроводкаПоСчетуНаСумму300ГдеЗаполненоКакДокументОт"",""формируется проводка по счету '62.01' на сумму 300, где 'субконто3' заполнено как Документ 'РеализацияТоваровИУслуг2' от 02.01.2014"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ФормируетсяПроводкаАвансаПоСчетуНаСумму700ГдеЗаполненоКакСамДокументПоступленияОплаты(Парам01,Парам02)"",""ФормируетсяПроводкаАвансаПоСчетуНаСумму700ГдеЗаполненоКакСамДокументПоступленияОплаты"",""формируется проводка аванса по счету '62.02' на сумму 700, где 'субконто3' заполнено как сам документ поступления оплаты"");

	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



&НаКлиенте
Процедура Подождать(Парам = 800)
	
	ПромДат = ТекущаяУниверсальнаяДатаВМиллисекундах() + Парам;
	//ПромДат = ТекущаяДата() + Парам;
	Пока ТекущаяУниверсальнаяДатаВМиллисекундах() < ПромДат Цикл
		Продолжить;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
//есть Конфигурация 'Бухгалтерия 3.0 (Такси)'
//@ЕстьКонфигурация(Парам01)
Процедура ЕстьКонфигурация(ИмяКонфигурации) Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСоединениеССеансомTESTCLIENT()
	//юТест.ПосмотретьЗначение(Контекст);
	ТестируемоеПриложение = КонтекстСохраняемый.ТестируемоеПриложение;
	
	ТекКоличествоСекундПодключения = ТекКоличествоСекундПодключения + 1;
	//Сообщить(""ТекКоличествоСекундПодключения="" + ТекКоличествоСекундПодключения);
	
	Попытка
		ТестируемоеПриложение.УстановитьСоединение();
		ОтключитьОбработчикОжидания(""УстановитьСоединениеССеансомTESTCLIENT"");
		Сообщить(""Подключились к сеансу TESTCLIENT!!!"");
		
		Сообщить(""Ищу главное окно."");
		
		//ГлавноеОкноТестКлиента = ТестируемоеПриложение.НайтиОбъект(Тип(""ТестируемоеОкноКлиентскогоПриложения""),""*Демонстрационная база*"",,30);
		
		
		ОкноПриложенияОсновное = Неопределено;
		КлиентсткиеОкнаТестируемогоПриложения = ТестируемоеПриложение.ПолучитьПодчиненныеОбъекты();
		Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
			Если ТестируемоеОкно.Основное Тогда
				ОкноПриложенияОсновное = ТестируемоеОкно;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		
		ГлавноеОкноТестКлиента = ОкноПриложенияОсновное;
		
		Сообщить(""ТипЗнч ГлавноеОкноТестКлиента= "" + ТипЗнч(ГлавноеОкноТестКлиента));
		
		Сообщить(""Пытаюсь активизировать гланое окно."");
		ГлавноеОкноТестКлиента.Активизировать();
		КонтекстСохраняемый.Вставить(""ГлавноеОкноТестКлиента"",ГлавноеОкноТестКлиента);
		
		
		
		юТест.ПродолжитьВыполнениеШагов();
		
		Возврат;
	Исключение
		Сообщить("""" + ОписаниеОшибки());
	КонецПопытки;
	
	Если ТекКоличествоСекундПодключения >= МаксКоличествоСекундПодключения Тогда
		ОтключитьОбработчикОжидания(""УстановитьСоединениеССеансомTESTCLIENT"");
		юТест.ПродолжитьВыполнениеШагов();
	КонецЕсли;	 
	
КонецПроцедуры


&НаКлиенте
//я запускаю сеанс 1С с ключом TestClient
//@ЯЗапускаюСеанс1ССКлючомTestClient()
Процедура ЯЗапускаюСеанс1ССКлючомTestClient() Экспорт
	Если КонтекстСохраняемый.Свойство(""ТестируемоеПриложение"") Тогда
		Возврат;
	КонецЕсли;	 
	
	
	СисИнфо = Новый СистемнаяИнформация; 
	
	ВерсияПриложения = СисИнфо.ВерсияПриложения;
	//Сообщить(""ВерсияПриложения=""+ВерсияПриложения);
	ПутьК1С = ""C:\Program Files (x86)\1cv8\"" + ВерсияПриложения + ""\bin\1cv8.exe"";
	ФайлПроверкаСуществования = Новый Файл(ПутьК1С);
	Если НЕ ФайлПроверкаСуществования.Существует() Тогда
		ВызватьИсключение ""Не нашел путь к 1cv8c.exe: "" + ПутьК1С;
		Возврат;
	КонецЕсли;	 
	
	КаталогБазы = СтрокаСоединенияИнформационнойБазы();
	КаталогБазы = СтрЗаменить(КаталогБазы,""File="","""");
	КаталогБазы = СтрЗаменить(КаталогБазы,"";"","""");
	//Сообщить(""СтрокаСоединенияИнформационнойБазы=""+СтрокаСоединенияИнформационнойБазы);
	
	СтрокаЗапуска = """""""" + ПутьК1С + """""" ENTERPRISE /F"" + КаталогБазы  +  ""/N""""Абдулов (директор)"""""" + "" /TESTCLIENT /RunModeManagedApplication"";
	
	Сообщить(""СтрокаЗапуска=""+СтрокаЗапуска);

	ЗапуститьСистему(СтрокаЗапуска);
	
	ТипЗначения = Тип(""ТестируемоеПриложение"");
	ПараметрыОбъекта = Новый Массив;
	ПараметрыОбъекта.Добавить(""localhost"");
	ТестируемоеПриложение = Новый (ТипЗначения,ПараметрыОбъекта);
	
	КонтекстСохраняемый.Вставить(""ТестируемоеПриложение"",ТестируемоеПриложение);
	
	
	
	юТест.ЗапретитьВыполнениеШагов();
	
	МаксКоличествоСекундПодключения = 20;
	ТекКоличествоСекундПодключения  = 0;
	
	
	УстановитьСоединениеССеансомTESTCLIENT();
	//ПодключитьОбработчикОжидания(""УстановитьСоединениеССеансомTESTCLIENT"",1);
	
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьВсехКонтрагентовСТакимИменемИИхДоговора(ИмяКонтрагента)
	
	ИмяПользователя = ИмяПользователя();
	Если ИмяПользователя <> ""Абдулов (директор)"" Тогда
		ВызватьИсключение ""Сработала защита по имени пользователя"";
	КонецЕсли;	 
	
	
	//удалим созданные предыдущими тестами договоры - начало
	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец.Наименование = &Наименование"";

	Запрос.УстановитьПараметр(""Наименование"", ИмяКонтрагента);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить(""Удаляю договор "" + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		ДоговорОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ДоговорОбъект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами договоры - конец
	
	
	
	
	//удалим созданные предыдущими тестами контрагентов - начало
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Наименование = &Наименование"";

	Запрос.УстановитьПараметр(""Наименование"", ИмяКонтрагента);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить(""Удаляю контрагента "" + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		КонтрагентОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		КонтрагентОбъект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами контрагентов - начало
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьДокументыОказанияУслуг(Наим)
	
	ИмяПользователя = ИмяПользователя();
	Если ИмяПользователя <> ""Абдулов (директор)"" Тогда
		ВызватьИсключение ""Сработала защита по имени пользователя"";
	КонецЕсли;	 
	
	//удалим созданные предыдущими тестами договоры - начало
	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Дата >= &Дата"";

	Запрос.УстановитьПараметр(""Дата"", '20140101');

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить(""Удаляю договор "" + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Объект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами договоры - конец
КонецПроцедуры


&НаКлиенте
//существует Контрагент 'тестовый Контрагент'
//@СуществуетКонтрагент(Парам01)
Процедура СуществуетКонтрагент(ИмяКонтрагента) Экспорт
	Если Контекст.Свойство(""Контрагент"") Тогда
		Возврат;
	КонецЕсли;	 
	
	УдалитьВсехКонтрагентовСТакимИменемИИхДоговора(ИмяКонтрагента);
	УдалитьДокументыОказанияУслуг(ИмяКонтрагента);
	
	
	
	
	ГлавноеОкноТестКлиента = КонтекстСохраняемый.ГлавноеОкноТестКлиента;
	ТестируемоеПриложение  = КонтекстСохраняемый.ТестируемоеПриложение;
	
	Подождать();
	ГлавноеОкноТестКлиента.ВыполнитьКоманду(""e1cib/list/Справочник.Контрагенты"");
	
	Подождать();
	ГлавноеОкноТестКлиента.ВыполнитьКоманду(""e1cib/command/Справочник.Контрагенты.Команда.Создать"");
	
	ФормаКонтрагента = ТестируемоеПриложение.НайтиОбъект(Тип(""ТестируемаяФорма""), ""Контрагент (создание)*"");
	
	Подождать();
	Поле = ФормаКонтрагента.НайтиОбъект(Тип(""ТестируемоеПолеФормы""), ""Наименование"");
	Поле.Активизировать();	
	
	Подождать();
	Поле.ВвестиТекст(ИмяКонтрагента);
	
	Подождать();
	КнопкаЗаписатьИЗакрыть = ФормаКонтрагента.НайтиОбъект(Тип(""ТестируемаяКнопкаФормы""), ""Записать"");
	КнопкаЗаписатьИЗакрыть.Нажать();	
	
	Контекст.Вставить(""Контрагент"","""");
КонецПроцедуры

&НаКлиенте
//существует договор 'тестовый договор Контрагента 1' с датой договора 01.01.2014
//@СуществуетДоговорСДатойДоговора(Парам01,Парам02)
Процедура СуществуетДоговорСДатойДоговора(Парам01,Парам02) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//существует услуга 'тестовая услуга 1'
//@СуществуетУслуга(Парам01)
Процедура СуществуетУслуга(Парам01) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//существует Документ 'РеализацияТоваровИУслуг1' от 01.01.2014  по контрагенту 'тестовый Контрагент' по договору 'тестовый договор Контрагента 1' по услуге 'тестовая услуга 1' на сумму 1000 руб.
//@СуществуетДокументОтПоКонтрагентуПоДоговоруПоУслугеНаСуммуРуб(Парам01,Парам02,Парам03,Парам04,Парам05,Парам06)
Процедура СуществуетДокументОтПоКонтрагентуПоДоговоруПоУслугеНаСуммуРуб(Парам01,Парам02,Парам03,Парам04,Парам05,Парам06) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Введена учетная политика
//@ВведенаУчетнаяПолитика()
Процедура ВведенаУчетнаяПолитика() Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//'тестовый Контрагент' хочет оплатить сумму 1100 руб.
//@ХочетОплатитьСуммуРуб(Парам01,Парам02)
Процедура ХочетОплатитьСуммуРуб(Парам01,Парам02) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//фиксируется оплата по  'тестовый Контрагент' по договору 'тестовый договор Контрагента 1'  на сумму 1100 рублей
//@ФиксируетсяОплатаПоПоДоговоруНаСуммуРублей(Парам01,Парам02,Парам03)
Процедура ФиксируетсяОплатаПоПоДоговоруНаСуммуРублей(Парам01,Парам02,Парам03) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//формируется проводка по счету '62.01' на сумму 1000, где 'субконто3' заполнено как Документ 'РеализацияТоваровИУслуг1' от 01.01.2014
//@ФормируетсяПроводкаПоСчетуНаСумму1000ГдеЗаполненоКакДокументОт(Парам01,Парам02,Парам03,Парам04)
Процедура ФормируетсяПроводкаПоСчетуНаСумму1000ГдеЗаполненоКакДокументОт(Парам01,Парам02,Парам03,Парам04) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//формируется проводка по счету '62.01' на сумму 100, где 'субконто3' заполнено как Документ 'РеализацияТоваровИУслуг2' от 02.01.2014
//@ФормируетсяПроводкаПоСчетуНаСумму100ГдеЗаполненоКакДокументОт(Парам01,Парам02,Парам03,Парам04)
Процедура ФормируетсяПроводкаПоСчетуНаСумму100ГдеЗаполненоКакДокументОт(Парам01,Парам02,Парам03,Парам04) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//на счете '62.01'  остается долг в размере 200 рублей по 'субконто3' Документ 'РеализацияТоваровИУслуг2' от 02.01.2014
//@НаСчетеОстаетсяДолгВРазмереРублейПоДокументОт(Парам01,Парам02,Парам03,Парам04,Парам05)
Процедура НаСчетеОстаетсяДолгВРазмереРублейПоДокументОт(Парам01,Парам02,Парам03,Парам04,Парам05) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//формируется проводка по счету '62.01' на сумму 300, где 'субконто3' заполнено как Документ 'РеализацияТоваровИУслуг2' от 02.01.2014
//@ФормируетсяПроводкаПоСчетуНаСумму300ГдеЗаполненоКакДокументОт(Парам01,Парам02,Парам03,Парам04)
Процедура ФормируетсяПроводкаПоСчетуНаСумму300ГдеЗаполненоКакДокументОт(Парам01,Парам02,Парам03,Парам04) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//формируется проводка аванса по счету '62.02' на сумму 700, где 'субконто3' заполнено как сам документ поступления оплаты
//@ФормируетсяПроводкаАвансаПоСчетуНаСумму700ГдеЗаполненоКакСамДокументПоступленияОплаты(Парам01,Парам02)
Процедура ФормируетсяПроводкаАвансаПоСчетуНаСумму700ГдеЗаполненоКакСамДокументПоступленияОплаты(Парам01,Парам02) Экспорт
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры
",
{4,3,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"Контекст",
{1,1,
{"ru","Контекст"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"КонтекстСохраняемый",
{1,1,
{"ru","Контекст"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}